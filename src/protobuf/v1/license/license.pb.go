// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.6
// source: v1/license/license.proto

package license

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LicenseInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LicenseInstallRequest) Reset() {
	*x = LicenseInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_license_license_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseInstallRequest) ProtoMessage() {}

func (x *LicenseInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_license_license_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseInstallRequest.ProtoReflect.Descriptor instead.
func (*LicenseInstallRequest) Descriptor() ([]byte, []int) {
	return file_v1_license_license_proto_rawDescGZIP(), []int{0}
}

func (x *LicenseInstallRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LicenseInstallRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type LicenseInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res     int32  `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LicenseInstallResponse) Reset() {
	*x = LicenseInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_license_license_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseInstallResponse) ProtoMessage() {}

func (x *LicenseInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_license_license_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseInstallResponse.ProtoReflect.Descriptor instead.
func (*LicenseInstallResponse) Descriptor() ([]byte, []int) {
	return file_v1_license_license_proto_rawDescGZIP(), []int{1}
}

func (x *LicenseInstallResponse) GetRes() int32 {
	if x != nil {
		return x.Res
	}
	return 0
}

func (x *LicenseInstallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LicenseStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LicenseStatusRequest) Reset() {
	*x = LicenseStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_license_license_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseStatusRequest) ProtoMessage() {}

func (x *LicenseStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_license_license_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseStatusRequest.ProtoReflect.Descriptor instead.
func (*LicenseStatusRequest) Descriptor() ([]byte, []int) {
	return file_v1_license_license_proto_rawDescGZIP(), []int{2}
}

type LicenseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UserId       string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	PlatformUUID string   `protobuf:"bytes,3,opt,name=platformUUID,proto3" json:"platformUUID,omitempty"`
	IssuedAt     string   `protobuf:"bytes,4,opt,name=issuedAt,proto3" json:"issuedAt,omitempty"`
	Expiration   string   `protobuf:"bytes,5,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Features     []string `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty"`
	Status       string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *LicenseStatusResponse) Reset() {
	*x = LicenseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_license_license_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseStatusResponse) ProtoMessage() {}

func (x *LicenseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_license_license_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseStatusResponse.ProtoReflect.Descriptor instead.
func (*LicenseStatusResponse) Descriptor() ([]byte, []int) {
	return file_v1_license_license_proto_rawDescGZIP(), []int{3}
}

func (x *LicenseStatusResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LicenseStatusResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LicenseStatusResponse) GetPlatformUUID() string {
	if x != nil {
		return x.PlatformUUID
	}
	return ""
}

func (x *LicenseStatusResponse) GetIssuedAt() string {
	if x != nil {
		return x.IssuedAt
	}
	return ""
}

func (x *LicenseStatusResponse) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

func (x *LicenseStatusResponse) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *LicenseStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_v1_license_license_proto protoreflect.FileDescriptor

var file_v1_license_license_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2f, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x76, 0x31, 0x2e, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x16, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x72, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x16, 0x0a, 0x14, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x55, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32,
	0xbb, 0x01, 0x0a, 0x07, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x2e,
	0x76, 0x31, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x43, 0x5a,
	0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x63, 0x63, 0x75,
	0x6b, 0x6e, 0x6f, 0x78, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_license_license_proto_rawDescOnce sync.Once
	file_v1_license_license_proto_rawDescData = file_v1_license_license_proto_rawDesc
)

func file_v1_license_license_proto_rawDescGZIP() []byte {
	file_v1_license_license_proto_rawDescOnce.Do(func() {
		file_v1_license_license_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_license_license_proto_rawDescData)
	})
	return file_v1_license_license_proto_rawDescData
}

var file_v1_license_license_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_license_license_proto_goTypes = []interface{}{
	(*LicenseInstallRequest)(nil),  // 0: v1.license.LicenseInstallRequest
	(*LicenseInstallResponse)(nil), // 1: v1.license.LicenseInstallResponse
	(*LicenseStatusRequest)(nil),   // 2: v1.license.LicenseStatusRequest
	(*LicenseStatusResponse)(nil),  // 3: v1.license.LicenseStatusResponse
}
var file_v1_license_license_proto_depIdxs = []int32{
	0, // 0: v1.license.License.InstallLicense:input_type -> v1.license.LicenseInstallRequest
	2, // 1: v1.license.License.GetLicenseStatus:input_type -> v1.license.LicenseStatusRequest
	1, // 2: v1.license.License.InstallLicense:output_type -> v1.license.LicenseInstallResponse
	3, // 3: v1.license.License.GetLicenseStatus:output_type -> v1.license.LicenseStatusResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_license_license_proto_init() }
func file_v1_license_license_proto_init() {
	if File_v1_license_license_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_license_license_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_license_license_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_license_license_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_license_license_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_license_license_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_license_license_proto_goTypes,
		DependencyIndexes: file_v1_license_license_proto_depIdxs,
		MessageInfos:      file_v1_license_license_proto_msgTypes,
	}.Build()
	File_v1_license_license_proto = out.File
	file_v1_license_license_proto_rawDesc = nil
	file_v1_license_license_proto_goTypes = nil
	file_v1_license_license_proto_depIdxs = nil
}
